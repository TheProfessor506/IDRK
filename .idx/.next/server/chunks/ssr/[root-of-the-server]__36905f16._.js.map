{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { z } from \"zod\";\n\nconst contactSchema = z.object({\n  name: z.string().min(2, { message: \"Name must be at least 2 characters.\" }),\n  email: z.string().email({ message: \"Please enter a valid email address.\" }),\n  message: z.string().min(10, { message: \"Message must be at least 10 characters.\" }),\n});\n\nexport async function submitContactForm(prevState: any, formData: FormData) {\n  const validatedFields = contactSchema.safeParse({\n    name: formData.get(\"name\"),\n    email: formData.get(\"email\"),\n    message: formData.get(\"message\"),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: \"Please correct the errors and try again.\",\n      success: false,\n    };\n  }\n\n  // In a real application, you would send an email here.\n  // For this example, we'll just log it and simulate success.\n  console.log(\"New contact form submission:\");\n  console.log(\"Name:\", validatedFields.data.name);\n  console.log(\"Email:\", validatedFields.data.email);\n  console.log(\"Message:\", validatedFields.data.message);\n\n  const timestamp = new Date().toLocaleString(\"en-US\", {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  return {\n    message: `Message sent successfully at ${timestamp}. Thank you!`,\n    success: true,\n    errors: null,\n  };\n}\n"],"names":[],"mappings":";;;;;;IAUsB,oBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/contact-form.tsx"],"sourcesContent":["\"use client\";\n\nimport { useFormState, useFormStatus } from \"react-dom\";\nimport { useEffect, useRef } from \"react\";\nimport { submitContactForm } from \"@/app/actions\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { CheckCircle, AlertCircle, Loader2 } from \"lucide-react\";\n\nconst initialState = {\n  message: \"\",\n  errors: null,\n  success: false,\n};\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending} className=\"w-full bg-accent hover:bg-accent/90 text-accent-foreground font-bold\">\n      {pending ? (\n        <>\n          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n          Sending...\n        </>\n      ) : (\n        \"Send Message\"\n      )}\n    </Button>\n  );\n}\n\nexport function ContactForm() {\n  const [state, formAction] = useFormState(submitContactForm, initialState);\n  const formRef = useRef<HTMLFormElement>(null);\n\n  useEffect(() => {\n    if (state.success) {\n      formRef.current?.reset();\n    }\n  }, [state.success]);\n\n  return (\n    <div className=\"w-full max-w-md mx-auto\">\n      <form\n        ref={formRef}\n        action={formAction}\n        className=\"space-y-6\"\n        noValidate\n      >\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"name\">Name</Label>\n          <Input id=\"name\" name=\"name\" placeholder=\"Your Name\" required aria-invalid={!!state.errors?.name} />\n          {state.errors?.name && <p className=\"text-sm text-destructive\">{state.errors.name[0]}</p>}\n        </div>\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"email\">Email</Label>\n          <Input id=\"email\" name=\"email\" type=\"email\" placeholder=\"your.email@example.com\" required aria-invalid={!!state.errors?.email}/>\n          {state.errors?.email && <p className=\"text-sm text-destructive\">{state.errors.email[0]}</p>}\n        </div>\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"message\">Message</Label>\n          <Textarea id=\"message\" name=\"message\" placeholder=\"Your message here...\" className=\"min-h-[120px]\" required aria-invalid={!!state.errors?.message}/>\n          {state.errors?.message && <p className=\"text-sm text-destructive\">{state.errors.message[0]}</p>}\n        </div>\n        \n        <SubmitButton />\n      </form>\n      \n      {state.message && (\n        <div role=\"alert\" className={`mt-6 flex items-start gap-3 p-4 rounded-lg text-sm border ${state.success ? 'bg-green-50 text-green-900 border-green-200 dark:bg-green-900/20 dark:text-green-200 dark:border-green-500/30' : 'bg-red-50 text-red-900 border-red-200 dark:bg-red-900/20 dark:text-red-200 dark:border-red-500/30'}`}>\n          {state.success ? <CheckCircle className=\"h-5 w-5 flex-shrink-0 mt-0.5\" /> : <AlertCircle className=\"h-5 w-5 flex-shrink-0 mt-0.5\" />}\n          <p className=\"flex-grow\">{state.message}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AATA;;;;;;;;;;AAWA,MAAM,eAAe;IACnB,SAAS;IACT,QAAQ;IACR,SAAS;AACX;AAEA,SAAS;IACP,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,4MAAA,CAAA,gBAAa,AAAD;IAChC,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,MAAK;QAAS,UAAU;QAAS,WAAU;kBAChD,wBACC;;8BACE,8OAAC,iNAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;gBAA8B;;2BAInD;;;;;;AAIR;AAEO,SAAS;IACd,MAAM,CAAC,OAAO,WAAW,GAAG,CAAA,GAAA,4MAAA,CAAA,eAAY,AAAD,EAAE,kJAAA,CAAA,oBAAiB,EAAE;IAC5D,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAmB;IAExC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,MAAM,OAAO,EAAE;YACjB,QAAQ,OAAO,EAAE;QACnB;IACF,GAAG;QAAC,MAAM,OAAO;KAAC;IAElB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,KAAK;gBACL,QAAQ;gBACR,WAAU;gBACV,UAAU;;kCAEV,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAO;;;;;;0CACtB,8OAAC,iIAAA,CAAA,QAAK;gCAAC,IAAG;gCAAO,MAAK;gCAAO,aAAY;gCAAY,QAAQ;gCAAC,gBAAc,CAAC,CAAC,MAAM,MAAM,EAAE;;;;;;4BAC3F,MAAM,MAAM,EAAE,sBAAQ,8OAAC;gCAAE,WAAU;0CAA4B,MAAM,MAAM,CAAC,IAAI,CAAC,EAAE;;;;;;;;;;;;kCAEtF,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAQ;;;;;;0CACvB,8OAAC,iIAAA,CAAA,QAAK;gCAAC,IAAG;gCAAQ,MAAK;gCAAQ,MAAK;gCAAQ,aAAY;gCAAyB,QAAQ;gCAAC,gBAAc,CAAC,CAAC,MAAM,MAAM,EAAE;;;;;;4BACvH,MAAM,MAAM,EAAE,uBAAS,8OAAC;gCAAE,WAAU;0CAA4B,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE;;;;;;;;;;;;kCAExF,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAU;;;;;;0CACzB,8OAAC,oIAAA,CAAA,WAAQ;gCAAC,IAAG;gCAAU,MAAK;gCAAU,aAAY;gCAAuB,WAAU;gCAAgB,QAAQ;gCAAC,gBAAc,CAAC,CAAC,MAAM,MAAM,EAAE;;;;;;4BACzI,MAAM,MAAM,EAAE,yBAAW,8OAAC;gCAAE,WAAU;0CAA4B,MAAM,MAAM,CAAC,OAAO,CAAC,EAAE;;;;;;;;;;;;kCAG5F,8OAAC;;;;;;;;;;;YAGF,MAAM,OAAO,kBACZ,8OAAC;gBAAI,MAAK;gBAAQ,WAAW,CAAC,0DAA0D,EAAE,MAAM,OAAO,GAAG,kHAAkH,qGAAqG;;oBAC9T,MAAM,OAAO,iBAAG,8OAAC,2NAAA,CAAA,cAAW;wBAAC,WAAU;;;;;6CAAoC,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;kCACnG,8OAAC;wBAAE,WAAU;kCAAa,MAAM,OAAO;;;;;;;;;;;;;;;;;;AAKjD","debugId":null}}]
}