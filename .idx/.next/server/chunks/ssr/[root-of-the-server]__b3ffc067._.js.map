{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/personalized-greeting.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Generates a personalized greeting based on the time of day.\n *\n * - personalizedGreeting - A function that returns a personalized greeting string.\n * - PersonalizedGreetingOutput - The output type for the personalizedGreeting function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst PersonalizedGreetingOutputSchema = z.object({\n  greeting: z.string().describe('A personalized greeting based on the time of day.'),\n});\n\nexport type PersonalizedGreetingOutput = z.infer<typeof PersonalizedGreetingOutputSchema>;\n\nexport async function personalizedGreeting(): Promise<PersonalizedGreetingOutput> {\n  return personalizedGreetingFlow();\n}\n\nconst personalizedGreetingPrompt = ai.definePrompt({\n  name: 'personalizedGreetingPrompt',\n  output: {schema: PersonalizedGreetingOutputSchema},\n  prompt: `You are a friendly assistant that greets website visitors with a personalized message based on the time of day.\n\n  Current time: {{currentTime}}\n\n  Generate a short, engaging greeting message that makes the visitor feel welcome. Be concise. Do not be too formal or informal.\n  The greeting should be appropriate for a personal portfolio website.\n  Do not ask any questions like \"How can I help you?\".\n  The greeting should not be more than 20 words.\n  The greeting should be casual but professional.\n  Examples of great greetings:\n  \"Welcome to Matei's all!\"\n  \"Hi there! Welcome to Matei's personal website.\"\n  \"Welcome! Feel free to explore Matei's portfolio.\"\n  Examples of bad greetings:\n  \"Good morning! How can I help you today?\"\n  \"Welcome to my website! I hope you enjoy your stay.\"\n  \"Hello! Thanks for visiting my portfolio.\"\n  `, \n});\n\nconst personalizedGreetingFlow = ai.defineFlow(\n  {\n    name: 'personalizedGreetingFlow',\n    outputSchema: PersonalizedGreetingOutputSchema,\n  },\n  async () => {\n    const currentTime = new Date().toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'});\n    const {output} = await personalizedGreetingPrompt({currentTime});\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAiBsB,uBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/personalized-greeting.tsx"],"sourcesContent":["\"use client\";\n\nimport { personalizedGreeting } from \"@/ai/flows/personalized-greeting\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { useEffect, useState } from \"react\";\n\nexport function PersonalizedGreeting() {\n  const [greeting, setGreeting] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    personalizedGreeting()\n      .then((response) => {\n        setGreeting(response.greeting);\n      })\n      .catch((error) => {\n        console.error(\"Failed to get personalized greeting:\", error);\n        setGreeting(\"Welcome!\"); // Fallback greeting\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  if (isLoading) {\n    return <Skeleton className=\"h-8 w-72 mx-auto\" />;\n  }\n\n  return <p className=\"text-xl md:text-2xl text-muted-foreground\">{greeting}</p>;\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,CAAA,GAAA,0JAAA,CAAA,uBAAoB,AAAD,IAChB,IAAI,CAAC,CAAC;YACL,YAAY,SAAS,QAAQ;QAC/B,GACC,KAAK,CAAC,CAAC;YACN,QAAQ,KAAK,CAAC,wCAAwC;YACtD,YAAY,aAAa,oBAAoB;QAC/C,GACC,OAAO,CAAC;YACP,aAAa;QACf;IACJ,GAAG,EAAE;IAEL,IAAI,WAAW;QACb,qBAAO,8OAAC,oIAAA,CAAA,WAAQ;YAAC,WAAU;;;;;;IAC7B;IAEA,qBAAO,8OAAC;QAAE,WAAU;kBAA6C;;;;;;AACnE","debugId":null}}]
}